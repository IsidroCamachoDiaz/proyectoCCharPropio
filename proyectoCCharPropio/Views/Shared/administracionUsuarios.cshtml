@using proyectoCCharPropio.DTOS;
@model proyectoCCharPropio.Controllers.AdministracionControlador.ModeloAdministracion
@{
    ViewData["Title"] = "Inicio de sesión - Registrar Usuario - Recupera contraseña";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <link rel="icon" href="/img/logoPNG.png" type="image/jpg">
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/fontawesome/css/all.min.css">
    <link rel="stylesheet" href="/css/templatemo-style.css">
    <link rel="stylesheet" href="/css/tabla.css">
</head>
<body>
    <!-- Lógica de JavaScript para mostrar la alerta -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>

        var mensajeAlerta = '@TempData["MensajeAlerta"]';
        var tipo = '@TempData["Tipo"]';
        var icono = '@TempData["Icono"]';
        var titulo = '@TempData["Titulo"]';

        function mostrarAlertaPersonalizada() {
            if (icono == "check") {
                icono = '<i class="fas fa-check" style="font-size: 1em;"></i>';
            }
            else {
                icono = '<i class="fas fa-times" style="font-size: 1em;"></i>'
            }
            Swal.fire({
                icon: tipo,
                title: titulo,
                text: mensajeAlerta,
                showCancelButton: false,
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'OK',
                iconHtml: icono,  // Ajusta el tamaño según sea necesario
            });
        }
    </script>
    <script>
        var mostrarAlerta = '@TempData["MostrarAlerta"]';
        console.log('Valor de mostrarAlerta:', mostrarAlerta);

        if (mostrarAlerta && mostrarAlerta.toLowerCase() === 'true') {
            console.log('Mostrando la alerta');
            mostrarAlertaPersonalizada();
            mostrarAlerta = "false";
        }
    </script>

    <nav class="navbar navbar-expand-lg">
        <div class="container-fluid">
            <a class="navbar-brand" href="@Url.Action("home", "RegistroControlador")">
                <img class="logo" src="/img/logo.png" alt="Imagen de Usuario">
                <span class="text-white">Menu</span>
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <i class="fas fa-bars"></i>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav ml-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link nav-link-1" aria-current="page" href="@Url.Action("home", "RegistroControlador")">Menu</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link nav-link-2" href="@Url.Action("modificarPerfil", "RegistroControlador")">
                            <div class="user-info-container d-flex align-items-center">
                                @if (Model.Usuario.Foto_usuario != null && Model.Usuario.Foto_usuario.Length > 0)
                                {
                                    // Convertir el array de bytes a cadena Base64
                                    var imagenBase64 = Convert.ToBase64String(Model.Usuario.Foto_usuario);

                                    // Mostrar la imagen usando la cadena Base64 en la etiqueta <img>
                                    <img class="rounded-circle user-avatar" src="data:image/png;base64,@imagenBase64" alt="Imagen de Usuario">
                                }
                                else
                                {
                                    // Mostrar una imagen predeterminada si el array de bytes es nulo o vacío
                                    <img class="rounded-circle user-avatar" src="https://definicion.de/wp-content/uploads/2019/07/perfil-de-usuario.png" alt="Imagen de Usuario">
                                }
                                <span class="ml-2 text-white">Perfil</span>
                            </div>
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="tm-hero d-flex justify-content-center align-items-center" data-parallax="scroll" data-image-src="/img/hero.jpg">
        <form class="d-flex tm-search-form">
            <div class="user-info-container2 d-flex align-items-center">            
                <h2 class="text-white">Administracion de Usuarios</h2>
            </div>
        </form>
    </div>
        <div class="container-fluid">
            <div class="row">
                <div class="col-12 table-container">
                    <table>
                        <thead>
                            <tr>
                                <th>Foto</th>
                                <th>Correo</th>
                                <th>Nombre de Usuario</th>
                                <th>Telefono</th>
                                <th>Nivel de Acceso</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                        @foreach (UsuarioDTO usuarioVer in Model.ListaUsuarios){
                                var foto= Convert.ToBase64String(usuarioVer.Foto_usuario);                       

                            <tr>
                                <td> <img class="rounded-circleVer user-avatarVer" src="data:image/png;base64,@foto" alt="Imagen de Usuario"></td>
                                <td>@usuarioVer.Correo_usuario</td>
                                <td>@usuarioVer.Nombre_usuario</td>
                                <td>@usuarioVer.Telefono_usuario</td>
                                <td>@usuarioVer.Id_acceso</td>
                                <td>
                                    <form method="post" asp-controller="AdministracionControlador" asp-action="BorrarUsuario" id="formulario @usuarioVer.Id_usuario">
                                        <input type="hidden" name="id_usuario" value="@usuarioVer.Id_usuario">
                                    </form>
                                    <button class="btn btn-danger" onclick="confirmarBorrado('@usuarioVer.Id_usuario')">Borrar Usuario</button>
                                    <a href="https://localhost:7048/AdministracionControlador/modificarUsuario?id=@usuarioVer.Id_usuario">
                                        <button class="btn btn-success" type="button">Modificar Usuario</button>
					      	        </a>	
                                </td>
                            </tr>
                        }
                    </tbody>
                    </table>
                </div>
            </div>
        </div>

        <script src="/js/plugins.js"></script>
        <script>
            $(window).on("load", function () {
                $('body').addClass('loaded');
            });
        </script>

       <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
        <script>
          function confirmarBorrado(idUsuario) {
	          console.log('formBorrarUsuario'+idUsuario);
            Swal.fire({
              title: '¿Estás seguro?',
              text: 'Esta acción no se puede deshacer.',
              icon: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#3085d6',
              cancelButtonColor: '#d33',
              confirmButtonText: 'Sí, borrar usuario'
            }).then((result) => {
              if (result.isConfirmed) {
                // Si el usuario confirma, entonces enviamos el formulario
                document.getElementById('formulario '+idUsuario).submit();
              }
            });
          }
        </script>
</body>
</html>